job.factory.class=org.apache.samza.job.yarn.YarnJobFactory
job.name=smurf-profiler-couchbase

# YARN
yarn.package.path=file://${basedir}/target/${project.artifactId}-${pom.version}-dist.tar.gz
yarn.container.memory.mb=512

# Task
task.class=smurf.task.SmurfProfilerTask
task.inputs=kafka.smurf-position,kafka.smurf-mood
task.outputs=kafka.smurf-profile
task.checkpoint.factory=org.apache.samza.checkpoint.kafka.KafkaCheckpointManagerFactory
task.checkpoint.system=kafka
task.checkpoint.replication.factor=1
task.commit.ms=60000
task.window.ms=10000

serializers.registry.json.class=org.apache.samza.serializers.JsonSerdeFactory
serializers.registry.integer.class=org.apache.samza.serializers.IntegerSerdeFactory

systems.kafka.samza.factory=org.apache.samza.system.kafka.KafkaSystemFactory
systems.kafka.consumer.zookeeper.connect=localhost:2181/
systems.kafka.producer.bootstrap.servers=localhost:9092
systems.kafka.streams.smurf-position.samza.key.serde=integer
systems.kafka.streams.smurf-position.samza.msg.serde=json
systems.kafka.streams.smurf-position.samza.offset.default=oldest
systems.kafka.streams.smurf-mood.samza.key.serde=integer
systems.kafka.streams.smurf-mood.samza.msg.serde=json
systems.kafka.streams.smurf-mood.samza.offset.default=oldest
systems.kafka.streams.smurf-profile.samza.key.serde=integer
systems.kafka.streams.smurf-profile.samza.msg.serde=json

stores.smurf-store.factory=smurf.kv.CouchbaseKeyValueStorageEngineFactory
stores.smurf-store.couchbase.url=localhost
stores.smurf-store.couchbase.bucket=default
stores.smurf-store.key.serde=integer
stores.smurf-store.msg.serde=json
stores.smurf-store.object.cache.size=20000
stores.smurf-store.write.batch.size=10000

metrics.reporters=snapshot
metrics.reporter.snapshot.class=org.apache.samza.metrics.reporter.MetricsSnapshotReporterFactory
metrics.reporter.snapshot.stream=kafka.metrics
serializers.registry.metrics.class=org.apache.samza.serializers.MetricsSnapshotSerdeFactory
systems.kafka.streams.metrics.samza.msg.serde=metrics
